1.51单片机的片内RAM可以分为片内随机存储块和特殊功能寄存器块。两者都占有128字节。片内随机存储块的地址为00H--7FH,特殊功能寄存器块的地址为80H--0FFH。注意：52单片机的随机存储块的地址为00H--0FFH,
特殊功能寄存器的地址为80H--0FFH,所以存在地址重叠，用不同的访问指令来进行区分。
2.片内随机存储块又分为工作寄存器组区，位寻址区，一般RAM区和堆栈区。（这几个内容都非常重要，需要全部掌握，接下来进行一一介绍）
3.地址为00H--1FH的是工作寄存器组区,它被分为了四组，00H--07H,08H--1FH,20H--27H,28H--2FH，这四组工作寄存器组区的选择是用PSW寄存器（特殊功能寄存器）的RS1,PS0来确定。main函数使用的为第0组寄存器
所以中断函数不能指定为第0组寄存器，不然该组寄存器的内容会被改变，导致出错。（范例：void int0() interrupt0 using 0）。不能在同一个寄存器组里面同时使用两个不同优先级的中断，否则高优先级会
打断低优先级改变低优先级正在使用的寄存器的内容。（注意：写中断程序的时候一定要用using语句来指定寄存器组，可以是1,2,3，不能是0）
4.地址为20H--2FH的是位寻址区，该区域的每一个寄存器的每一位都可以被人为地置0或置1，既可以按照位寻址，也可以按照字节寻址，这里有一个非常值得注意的地方，该区域是有16个位寻址的寄存器，每个寄存器
有8位，它们的位地址是连续的，20H寄存器的位地址是从20H--27H,21H寄存器的位地址是从28H--2FH,22H寄存器的位地址是从30H--37H,以此类推。所以会有某一寄存器的位地址和另一个寄存器的直接地址是相同的，
由于对位地址和直接地址的操作指令不同，所以能够区分开。所以该类寄存器可以用来存放一个位的内容，比如存放某一个准双向口的状态（0或1）。
5.地址为30H--7FH的是一般RAM区，该区域也是用户RAM区，用户一般指明字节地址来进行访问。
6.堆栈区的地址没有明确，它不是一个明确的寄存器，而是你指定的，比如你指定43H--56H为堆栈区，那么这段区域就变成了堆栈。（实际上，这里只能指定堆栈的开始的地方，不能指定结束的地方，堆栈的大小是
无法确定的，所以才叫生长型）当你设定好堆栈的首地址后，CPU内部有个堆栈指针SP就自动指向了堆栈，这里把CPU假设成一个你的员工，这个员工正在帮你整理资料，（这个过程你是这样交给他做的，你先给他资料，然后说：在
我2号别墅里面有个任务板，按照上面说的做），这个时候，你突然叫他来帮你洗脚，那么你希望他帮你洗完脚之后继续来整理资料，如果不进行任何操作，那么他一定会忘记还要帮你整理资料这件事，所以你先给他
一个记事本，假如命令他把当前干的事记在记事本的27页（这就是堆栈的首地址），然后他就把你告诉他去2号别墅按照任务板这件事写在了27页，把2号别墅的地址给写在了28页，然后再把你的资料夹在29页，然后他兜里有个
叫SP的东西，会记下记事本的最大页码。当他帮你洗完脚，他通过SP先翻到了记事本的29页，找到了资料，他还不知道要干嘛，再翻到28页，看到你的2号别墅地址，还是不知道要干嘛，再翻到27页，然后就可以接着
做刚刚中断的任务了。
